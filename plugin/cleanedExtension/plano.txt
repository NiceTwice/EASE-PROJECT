Les json :
* AJOUT DE SWITCH
* PASSAGE de "checkAlreadyLogged":[{"search":xxxx}] 
à "checkAlreadyLogged":{"todo":[...]}
    -> todo :
        [action:"waitfor", search:"xxx"],
        [action:"check", type:"hasCookie", name:"cookiename"],
        [action:"check", type:"matchUrl", url:"http://aaaa.com/*"],
        [action:"check", type:"hasElement", search:"input.exemple"],
        [action:"check", type:"absentElement", search:"input.exemple"]
        [action:"get", var:"user", search:"element", attribute:"val"] (si attribute="text", prend le innerHtml)


Background:
--> Faire un js qui communique avec le content_script de Ease (recevoir et envoyer des messages)
--> Background connect
    BIG STEP
    -> Si step suivante et current step facebook
        -> checker le user facebook
        -> Si last fb user est correct
            -> NEXTBIGSTEP
    -> Ouvrir le site
    -> Start overlay
    -> CheckAlreadyLogged overlay
    -> checkAlreadyLogged -> response {connected: true/false, user:"user" ou non}
    -> Si connecté
        -> Si user est le bon
            -> NEXT BIG STEP
        -> Si mauvais user ou inconnue
            -> Si action switch account
                -> Ajouter l'action switchAccount overlay
                -> Ajouter l'action switch account sur la liste d'actions à faire
            -> Sinon
                -> Ajouter l'action logout overlay
                -> Ajouter l'action logout sur la liste d'actions à faire
    -> Ajouter l'action connect overlay
    -> Ajouter l'action connect sur la liste d'actions à faire
    -> Envoyer les actions à la page
    -> While(1)
        -> Quand on reçoit une réponse
            -> si fail
                -> END
            -> sinon
                -> si actionStep < length
                    -> ATTENDRE
                -> Sinon, BREAK
            -> Enregistre step où on en est
        -> A chaque reload
            -> start overlay
            -> renvoie les actions où on en est   
    -> Save lastUser
    -> Si next big stp
        -> waitload (dépend du mode co. Peut être qu'avec google ça posera pb)
        -> NEXT BIG STEP
        -> Sinon
            -> end overlay
            -> END
   
        
-> checkWhoIsLogged.js
    -> Reception du message checkAlreadyLogged {user:user@mail.com, checkAlreadyLogged:{todo:...}}
    -> todo :
        [action:"waitfor", search:"xxx"],
        [action:"hasCookie", name:"cookiename"],
        [action:"matchUrl", url:"http://aaaa.com/*"],
        [action:"hasElement", search:"input.exemple"],
        [action:"absentElement", search:"input.exemple"]
    -> faire les actions (waitfor puis le check)
    -> Si connecté
        -> Si checkUser
            -> Récup user
        -> Sinon
            -> lastUser
        -> send {connected:true, user:"user" OU null(si inconnu)}
    -> Sinon
        -> send {connected:false}